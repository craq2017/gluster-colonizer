- hosts: localhost
  become: yes

  vars:
    # current_user: "{{ansible_user|default(lookup('env', 'USER')) }}"
    current_user: "ansible"

  tasks:

    - name: generate ssh key for current user if required
      user:
        name: "{{ current_user }}"
        generate_ssh_key: yes
        ssh_key_bits: 4096
        ssh_key_type: rsa
        state: present

- hosts: gluster_nodes
  become: yes
  any_errors_fatal: True

  vars:
    # current_user: "{{ansible_user|default(lookup('env', 'USER')) }}"
    current_user: "ansible"

  tasks:

    - name: add local ssh key to hosts
      authorized_key:
        user: "{{ current_user }}"
        state: present
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

    - name: add sudoers configuration for the current user
      lineinfile:
        path: /etc/sudoers.d/{{ current_user }}
        line: "{{ current_user }}        ALL=(ALL)       NOPASSWD: ALL"
        create: yes
        state: present

    - name: allow non-interactive sudo access
      lineinfile:
        path: /etc/sudoers
        line: "#Defaults requiretty"
        regexp: "^Defaults(.*?)requiretty"
        backrefs: yes
        state: present

    - name: disable DNS lookup in sshd
      lineinfile:
        path: /etc/ssh/sshd_config
        line: "UseDNS no"
        state: present
      notify:
        - reload sshd

    - name: install gluster
      yum: name={{ item }} state=present
      with_items:
        - "@RH-Gluster-Core"
        - "@RH-Gluster-NFS-Ganesha"
        - "@RH-Gluster-Tools"
        - "@scalable-file-systems"
        - nfs-utils
        - vim
        - vim-enhanced
        - net-tools
        - telnet
        - wget
        - mlocate
        - firewalld
        - sysstat
        - net-snmp-utils
        - redhat-support-tool
        - NetworkManager
        - NetworkManager-team
        - NetworkManager-glib
        - teamd
        - gstatus
        - ctdb
      notify:
        - enable firewalld
        - enable networkmanager

    # - name: install colonizer
    #   yum: name={{ item }} state=present
    #   with_items:
    #     - gluster-colonizer
    #     - gluster-zeroconf-avahi
    #   notify:
    #     - enable zeroconf
    #     - allow zeroconf
    #
    # - name: configure avahi daemon to only allow {{ ansible_default_ipv4.alias }}
    #   lineinfile:
    #     line: "allow-interfaces={{ ansible_default_ipv4.alias }}"
    #     path: /etc/avahi/avahi-daemon.conf
    #     insertafter: "\\[server\\]"
    #     state: present

    - name: configure system panic settings
      blockinfile:
        block: |
          kernel.unknown_nmi_panic = 1
          kernel.softlockup_panic = 1
          kernel.nmi_watchdog = 1
        path: /etc/sysctl.d/panic.conf
        create: yes
        state: present

  handlers:

      - name: enable firewalld
        service: name=firewalld state=started enabled=yes

      - name: enable networkmanager
        service: name=NetworkManager state=started enabled=yes

      - name: reload sshd
        service: name=sshd state=reloaded

      # - name: enable avahi socket
      #   systemd: unit=avahi-daemon.socket state=started enabled=yes
      #   listen: enable zeroconf
      #
      # - name: enable avahi service
      #   systemd: unit=avahi-daemon.service state=started enabled=yes
      #   listen: enable zeroconf
      #
      # - name: allow zeroconf
      #   firewalld: service=mdns state=enabled permanent=true immediate=true
