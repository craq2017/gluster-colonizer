---
- name: Set CTDB lock volume name
  delegate_to: "{{ play_hosts[0] }}"
  run_once: true
  set_fact:
    ctdb_volname: ctdb

- name: Set CTDB brick path
  delegate_to: "{{ play_hosts[0] }}"
  run_once: true
  set_fact:
    ctdb_brick_path: /gluster/bricks/

- name: Build brick string for CTDB lock volume
  delegate_to: "{{ play_hosts[0] }}"
  run_once: true
  set_fact:
    ctdb_brickstring: "{{ ctdb_brickstring | default('') }},{{ item }}:{{ ctdb_brick_path }}{{ ctdb_volname }}"
  with_items:
    - "{{ ha_cluster_nodes.split(',') | join(' ') }}"

- shell: /bin/bash -c 'echo "Configuring firewall for CTDB..." > {{ fifo }}'

- name: Open firewalld ports for CTDB
  firewalld:
    port: "{{ item }}"
    permanent: True
    immediate: True
    state: enabled
  with_items:
    - 4379/tcp

- shell: /bin/bash -c 'echo "Creating CTDB lock volume..." > {{ fifo }}'

- name: Create Gluster volume for CTDB lock
  delegate_to: "{{ play_hosts[0] }}"
  run_once: true
  volume:
    action:         create
    volume:         "{{ ctdb_volname }}"
    bricks:         "{{ ctdb_brickstring }}"
    hosts:          "{{ ha_cluster_nodes }}"
    replica:        yes
    # Below values need to be quoted as they are appended to the command line
    replica_count:  "{{ ctdb_replica_count }}"
    arbiter_count:  0
    force:          "{{ force | default(False) }}"
  register: result
  failed_when: "result.rc != 0 and ('already exists' not in result.msg)"

- name: Add volume name to ctdb setup/teardown scripts
  replace:
    dest: "{{ item }}"
    regexp: '^META="?all"?'
    replace: 'META="{{ ctdb_volname }}"'
  with_items:
    - /var/lib/glusterd/hooks/1/stop/pre/S29CTDB-teardown.sh
    - /var/lib/glusterd/hooks/1/start/post/S29CTDBsetup.sh
  ignore_errors: yes

- name: Enable clustering in Samba
  lineinfile:
    dest: /etc/samba/smb.conf
    line: "clustering=yes"
    insertafter: '^\[global\]'

- name: Start CTDB lock volume
  delegate_to: "{{ play_hosts[0] }}"
  run_once: true
  volume:
    action: start
    volume: "{{ item }}"
    force: "{{ force | default(False) }}"
  with_items:
    - "{{ ctdb_volname }}"
  register: result
  failed_when: "result.rc != 0 and ('already started' not in result.msg)"

- name: Add HA node IPs to /etc/ctdb/nodes
  lineinfile:
    dest: /etc/ctdb/nodes
    line: "{{ item }}"
  with_items:
    - "{{ ha_cluster_ips.split(',') | join(' ') }}"

- name: Add VIPs to /etc/ctdb/public_addresses
  lineinfile:
    dest: /etc/ctdb/public_addresses
    line: "{{ item }}/{{ storage_subnet_prefix }} {{ storage_interface }}"
  with_items:
    - "{{ vip_list }}"

- name: Start ctdb service
  service:
    name: ctdb
    state: started

#- name: Enable ctdb service
  #service: name=ctdb enabled=yes
